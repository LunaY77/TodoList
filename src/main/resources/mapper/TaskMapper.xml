<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iflove.todolist.mapper.TaskMapper">

    <resultMap id="BaseResultMap" type="com.iflove.todolist.domain.entity.Task">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="star" column="star" jdbcType="INTEGER"/>
        <result property="dueDate" column="due_date" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="categoryId" column="category_id" jdbcType="BIGINT"/>
    </resultMap>


    <!-- 插入任务 -->
    <insert id="create" parameterType="com.iflove.todolist.domain.dto.TaskInfoDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO task (user_id, title, description, due_date, category_id)
        VALUES (#{uid}, #{title}, #{description}, #{dueDate},
                (SELECT id FROM category WHERE user_id = #{uid} AND name = #{categoryName}));
    </insert>

    <!-- 修改任务 -->
    <update id="modify" parameterType="com.iflove.todolist.domain.dto.TaskInfoDto">
        UPDATE task
        <set>
            <if test="title != null"> title = #{title}, </if>
            <if test="description != null"> description = #{description}, </if>
            <if test="dueDate != null"> due_date = #{dueDate}, </if>
            <if test="categoryName != null"> category_id = (SELECT id FROM category WHERE user_id = #{uid} AND name = #{categoryName}), </if>
        </set>
        WHERE id = #{id} AND user_id = #{uid}
    </update>

    <select id="getByIdAndUid" resultType="com.iflove.todolist.domain.entity.Task">
        SELECT id FROM task WHERE id = #{id} AND user_id = #{uid};
    </select>

    <select id="queryAll" resultType="com.iflove.todolist.domain.vo.response.task.TaskInfoResp">
        SELECT a.id as id, a.user_id as user_id, a.title as title, a.description as description,
               a.status as status, a.star as star, a.due_date as due_date, a.create_time as createTime,
               b.name as category, GROUP_CONCAT(c.name) as tags
        FROM task a
        LEFT JOIN category b ON a.category_id = b.id
        LEFT JOIN (
            SELECT lt.task_id task_id, t.name name
            FROM todolist_tags lt
            LEFT JOIN tags t on lt.tag_id = t.id
        ) c ON c.task_id = a.id
        WHERE a.user_id = #{uid}
        GROUP BY a.id;
    </select>

    <select id="getTasksByDueDate" resultType="com.iflove.todolist.domain.vo.response.task.TaskInfoResp">
        SELECT a.id as id, a.user_id as user_id, a.title as title, a.description as description,
               a.status as status, a.star as star, a.due_date as due_date, a.create_time as createTime,
               b.name as category, GROUP_CONCAT(c.name) as tags
        FROM task a
        LEFT JOIN category b ON a.category_id = b.id
        LEFT JOIN (
            SELECT lt.task_id task_id, t.name name
            FROM todolist_tags lt
            LEFT JOIN tags t on lt.tag_id = t.id
        ) c ON c.task_id = a.id
        WHERE a.user_id = #{uid} AND DATE(a.due_date) = #{dueDate}
        GROUP BY a.id;
    </select>
</mapper>
